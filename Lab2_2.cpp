#include "pch.h" // Включення заголовкового файлу pch.h (може бути використано для попереднього компілювання)
#include <iostream> // Включення заголовкового файлу для стандартного введення/виведення
#include <cmath> // Включення заголовкового файлу для математичних функцій
#include <Windows.h> // Включення заголовкового файлу для роботи з функціями Windows

using namespace std;

int main() {
    SetConsoleOutputCP(1251); // Встановлення кодової сторінки для коректного виведення символів

    int row, coll;
    cout << "Введіть кількість РЯДКІВ динамічного двовимірного масиву: ";
    cin >> row;
    cout << "Введіть кількість СТОВПЦІВ динамічного двовимірного масиву: ";
    cin >> coll;

    float** A = new float* [row]; // Створення динамічного масиву вказівників на float для рядків

    for (int i = 0; i < row; i++) {
        A[i] = new float[coll]; // Створення динамічного масиву float для кожного рядка
    }

    // Заповнення двовимірного масиву A
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < coll; j++) {
            cout << "A[" << i << "][" << j << "] = ";
            cin >> A[i][j];
        }
    }

    // Пошук мінімального елемента в масиві A
    float min = A[0][0];
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < coll; j++) {
            if (A[i][j] < min) {
                min = A[i][j];
            }

        }
    }

    int noMinCount = 0; // Лічильник елементів, які не дорівнюють мінімальному значенню

    // Підрахунок кількості елементів, які не дорівнюють мінімальному значенню
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < coll; j++) {
            if (A[i][j] != min) {
                noMinCount++;
            }
        }
    }

    int aIndex = 0;
    float* a = new float[noMinCount]; // Створення динамічного одновимірного масиву a

    // Копіювання всіх елементів, які не дорівнюють мінімальному значенню, в масив a
    for (int i = 0; i < row; i++) {
        for (int j = 0; j < coll; j++) {
            if (A[i][j] != min) {
                a[aIndex] = A[i][j];
                aIndex++;
            }
        }
    }

    // Виведення елементів одновимірного масиву a
    cout << "Одновимірний масив без мінімального елементу:" << endl;
    for (int i = 0; i < aIndex; i++) {
        cout << "a[" << i << "] = " << a[i] << endl;
    }

    // Звільнення виділеної пам'яті для двовимірного масиву A та одновимірного масиву a
    for (int i = 0; i < row; i++) {
        delete[] A[i];
    }
    delete[] A;
    delete[] a;

    return 0; // Завершення програми
}

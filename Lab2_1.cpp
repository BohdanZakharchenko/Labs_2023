#include "pch.h" // Включення заголовкового файлу pch.h (може бути використано для попереднього компілювання)
#include <iostream> // Включення заголовкового файлу для стандартного введення/виведення
#include <cmath> // Включення заголовкового файлу для математичних функцій
#include <unordered_set> // Включення заголовкового файлу для використання незакодованих множин
#include <Windows.h> // Включення заголовкового файлу для роботи з функціями Windows

using namespace std; 

int main() {

    SetConsoleOutputCP(1251); 

    int N; // Оголошення змінної N для зберігання розміру масиву

    cout << "Введіть розмір масиву: ";
    cin >> N; // Зчитування розміру масиву з клавіатури

    int* Arr = new int[N]; // Виділення пам'яті для динамічного масиву Arr розміром N
    unordered_set<int> uniqueElements; // Створення незакодованої множини для зберігання унікальних чисел

    cout << "Заповніть масив: " << endl;
    for (int i = 0; i < N; i++) {
        cout << "Arr[" << i << "] = ";
        cin >> Arr[i]; // Зчитування елементів масиву з клавіатури
    }
    for (int i = 0; i < N; i++) {
        // Перевірка на унікальність числа та чи знаходиться число в заданих межах
        if (Arr[i] < 1 || Arr[i] > N || uniqueElements.count(Arr[i]) > 0) {
            cout << "Неприпустиме число введено." << endl;
            int* arr = new int[i]; // Виділення пам'яті для динамічного масиву arr розміром i

            cout << "Елементи масиву Arr до першого недопустимого елемента:" << endl;
            for (int j = 0; j < i; j++) {
                arr[j] = Arr[j]; // Копіювання елементів Arr до arr
                cout << "arr[" << j << "] = " << arr[j] << endl; // Виведення елементів arr
            }

            delete[] arr; // Звільнення пам'яті, виділеної для arr
            delete[] Arr; // Звільнення пам'яті, виділеної для Arr
            return 0; // Завершення програми
        }

        uniqueElements.insert(Arr[i]); // Додавання унікального числа до множини uniqueNumbers
    }

   

    cout << "0" << endl; // Виведення "0" у випадку, коли масив є перестановкою

    
    delete[] Arr; // Звільнення пам'яті, виділеної для Arr
    return 0; // Завершення програми
}